class Solution(object):
    def maxArea(self, height):
        # Initialize two pointers at the start and end of the list
        left = 0
        right = len(height) - 1

        # Variable to keep track of the maximum area found so far
        maxarea = -1

        # Loop until the two pointers meet
        while left < right:
            # Calculate the area between the two lines:
            # Width = right - left
            # Height = shorter of the two lines (because water can't go above the shorter one)
            area = (right - left) * (height[left] if height[left] < height[right] else height[right])

            # Update maxarea if we found a larger area
            if area > maxarea:
                maxarea = area

            # Move the pointer pointing to the shorter line:
            # This might help us find a taller line and a potentially bigger area
            if height[left] < height[right]:
                left += 1  # Move left forward to find a possibly taller line
            else:
                right -= 1  # Move right backward to find a possibly taller line

        # Return the maximum area found
        return maxarea
