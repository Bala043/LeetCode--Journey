class Solution(object):
    def topKFrequent(self, nums, k):
        # ðŸ”¹ Step 1: Count frequency of each number
        freq_map = {}  # key = number, value = count
        for num in nums:
            if num not in freq_map:
                freq_map[num] = 1
            else:
                freq_map[num] += 1

        # ðŸ”¹ Step 2: Reverse map: group numbers by their frequency
        # key = frequency, value = list of numbers with that frequency
        freq_buckets = {}  # Like a bucket for each frequency
        for num, freq in freq_map.items():
            if freq not in freq_buckets:
                freq_buckets[freq] = [num]
            else:
                freq_buckets[freq].append(num)

        # ðŸ”¹ Step 3: Collect the top K frequent elements from highest frequency down to 1
        result = []
        index = 0

        # Since max possible frequency is len(nums), we iterate from high to low
        for i in range(len(nums), 0, -1):
            if i in freq_buckets:
                for num in freq_buckets[i]:
                    if index < k:
                        result.append(num)
                        index += 1
                    else:
                        return result  # Return early once k elements are found

        return result  # Just in case the loop ends naturally
